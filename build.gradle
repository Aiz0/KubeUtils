plugins {
    id "dev.architectury.loom" version "0.12.0-SNAPSHOT"
    id "maven-publish"
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

def ENV = System.getenv()

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+mc${project.minecraft_version}"
group = project.maven_group

def SNAPSHOT = ENV.SNAPSHOT != null && (ENV.SNAPSHOT == "true" || ENV.SNAPSHOT == true)
def MAVEN_URL = "https://maven.saps.dev/${SNAPSHOT ? "snapshots" : "releases"}"
def MAVEN_VERSION = project.version + (SNAPSHOT ? "-SNAPSHOT" : "")

loom {
    silentMojangMappingsLicense()

    forge {
        mixinConfigs = [
                "kubeutils.mixins.json"
        ]

        dataGen {
            mod project.mod_id
        }
    }

    launches {
        data {
            arg "--existing", file("src/main/resources").absolutePath
        }
    }
}

repositories {
    maven {
        url "https://maven.saps.dev/minecraft"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()

    forge "net.minecraftforge:forge:${project.forge_version}"

    modApi "dev.latvian.mods:kubejs-forge:1802.5.4-build.533"
    modApi "dev.latvian.mods:rhino-forge:1802.1.14-build.206"
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 17
}

java {
    withSourcesJar()
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

remapJar {
    setArchivesBaseName("${project.archivesBaseName}-forge") // adds fabric to the maven and curse name
}

if (ENV.CURSEFORGE_KEY) {
    curseforge {
        apiKey = ENV.CURSEFORGE_KEY
        project {
            id = project.curseforge_id
            releaseType = "release"
            addGameVersion "Forge"
            addGameVersion "Java 17"
            addGameVersion project.minecraft_version
            mainArtifact(remapJar.archiveFile)

            changelog = file("./CHANGELOG.md")
            changelogType = 'markdown'
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "${project.archivesBaseName}"
            from components.java

            version = MAVEN_VERSION
        }
    }

    repositories {
        if (ENV.SAPS_TOKEN) {
            maven {
                url MAVEN_URL
                credentials {
                    username = "errormikey"
                    password = "${ENV.SAPS_TOKEN}"
                }
            }
        }
    }
}
